@startuml StringExtensions.Divide
title StringExtensions.Divide
start
#LightBlue:List<DivideInfo> result = []
int startIdx = 0
var tagInfos = text.GetAllTags(tags);
:iterator = tagInfos.GetIterator();
while (iterator.MoveNext()) is (<color:green>yes)
:current = iterator.Current();
      if (startIdx < current.StartTagIndex) then (<color:green>yes)
          :result.Add(new DivideInfo(startIdx, current.StartTagIndex - 1)
                    {
                        Text = text.Partialstring(startIdx, current.StartTagIndex - 1),
                    });
          :result.Add(new DivideInfo(current)
                    {
                        Text = text.Partialstring(current.StartTagIndex, current.EndTagIndex),
                    });
          :startIdx = current.EndTagIndex + 1;
        else (<color:red>no)
          if (startIdx == current.StartTagIndex) then (<color:green>yes)
              :result.Add(new DivideInfo(current)
                    {
                        Text = text.Partialstring(current.StartTagIndex, current.EndTagIndex),
                    });
              :startIdx = current.EndTagIndex + 1;
          endif
      endif
endwhile (<color:red>no)
if (startIdx < text.Length - 1) then (<color:green>yes)
    :result.Add(new DivideInfo(startIdx, text.Length)
                {
                    Text = text.Partialstring(startIdx, text.Length - 1),
                });
endif
#Lavender:return result;
stop
@enduml
