@startuml StringExtensions.ReplaceAll
title StringExtensions.ReplaceAll
start
#LightBlue:int parseIndex = 0
int startTagIndex
int endTagIndex
StringBuilder result = new();
repeat
    :startTagIndex = text.IndexOf(startTag, parseIndex, StringComparison.CurrentCultureIgnoreCase);
    #LightBlue:int startTagEndIndex = startTagIndex > -1 ? startTagIndex + startTag.Length : parseIndex;
    :endTagIndex = startTagEndIndex >= 0 ? text.IndexOf(endTag, startTagEndIndex, StringComparison.CurrentCultureIgnoreCase) : -1;
    #LightBlue:int endTagEndIndex = endTagIndex > -1 ? endTagIndex + endTag.Length : parseIndex;
    if (startTagIndex > -1 && endTagIndex > startTagIndex) then (<color:green>yes)
        #LightBlue:string substr = text.Substring(startTagIndex, endTagIndex - startTagIndex + endTag.Length);
        :result.Append(text[parseIndex..startTagIndex]);
        if (replace != null) then (<color:green>yes)
            :result.Append(replace(substr));
        endif
        :parseIndex = endTagEndIndex;
    endif
repeat while (startTagIndex > -1 && endTagIndex > -1) is (<color:green>yes)
if (parseIndex < text.Length) then (<color:green>yes)
    :result.Append(text[parseIndex..]);
endif
#Lavender:return result.ToString();
stop
@enduml
